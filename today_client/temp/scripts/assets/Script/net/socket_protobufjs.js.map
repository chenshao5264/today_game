{"version":3,"sources":["assets/Script/net/socket_protobufjs.js"],"names":["protobufjs","require","_root","formatBuffer","buffer","bufferArray","Object","keys","map","k","console","log","cc","Class","statics","load","url","raw","err","root","encode","payload","protoMsg","lookupType","errMsg","verify","logger","error","msg","create","finish","decode"],"mappings":";;;;;;AAAA,IAAIA,aAAaC,QAAQ,YAAR,CAAjB;;AAEA,IAAIC,QAAQ,IAAZ;;AAEA,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC1B,QAAIC,cAAcC,OAAOC,IAAP,CAAYH,MAAZ,EAAoBI,GAApB,CAAwB,UAASC,CAAT,EAAY;AAClDC,gBAAQC,GAAR,CAAYP,OAAOK,CAAP,CAAZ;AACA,eAAOL,OAAOK,CAAP,CAAP;AACH,KAHiB,CAAlB;AAIA,WAAOL,MAAP;AACH;;AAEDQ,GAAGC,KAAH,CAAS;AACLC,aAAS;AACLC,cAAM,gBAAW;AACbf,uBAAWe,IAAX,CAAgBH,GAAGI,GAAH,CAAOC,GAAP,CAAW,4BAAX,CAAhB,EAA0D,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC1E,oBAAID,GAAJ,EAAS;AACLR,4BAAQC,GAAR,CAAYO,GAAZ;AACA;AACH;AACDR,wBAAQC,GAAR,CAAY,wBAAZ;AACAT,wBAAQiB,IAAR;AACH,aAPD;AAQH,SAVI;AAWLC,gBAAQ,gBAASC,OAAT,EAAkB;AACtB,gBAAIC,WAAWpB,MAAMqB,UAAN,CAAiB,iBAAjB,CAAf;AACA,gBAAIC,SAAWF,SAASG,MAAT,CAAgBJ,OAAhB,CAAf;AACA,gBAAIG,MAAJ,EAAY;AACRE,uBAAOC,KAAP,CAAaH,MAAb;AACA,uBAAO,EAAP;AACH;AACD,gBAAII,MAASN,SAASO,MAAT,CAAgBR,OAAhB,CAAb;AACA,gBAAIjB,SAASkB,SAASF,MAAT,CAAgBQ,GAAhB,EAAqBE,MAArB,EAAb;AACA,mBAAO1B,MAAP;AACH,SArBI;AAsBL2B,gBAAQ,gBAAS3B,MAAT,EAAiB;AACrB,gBAAIkB,WAAWpB,MAAMqB,UAAN,CAAiB,iBAAjB,CAAf;AACAb,oBAAQC,GAAR,CAAYP,MAAZ;AACA;AACD;AACC,gBAAIwB,MAAWN,SAASS,MAAT,CAAgB3B,MAAhB,CAAf;AACA,mBAAOwB,GAAP;AACH;AA7BI;AADJ,CAAT","file":"unknown","sourcesContent":["var protobufjs = require(\"protobufjs\");\n\nlet _root = null;\n\nfunction formatBuffer(buffer) {\n    let bufferArray = Object.keys(buffer).map(function(k) {\n        console.log(buffer[k]);\n        return buffer[k];\n    })\n    return buffer\n}\n\ncc.Class({\n    statics: {\n        load: function() {\n            protobufjs.load(cc.url.raw('resources/proto/base.proto'), function(err, root) {\n                if (err) {\n                    console.log(err);\n                    return;\n                }\n                console.log(\"load proto successful!\");\n                _root = root;\n            }) \n        },\n        encode: function(payload) {\n            let protoMsg = _root.lookupType('base.MessagePkg');\n            let errMsg   = protoMsg.verify(payload);\n            if (errMsg) {\n                logger.error(errMsg);\n                return [];\n            }\n            let msg    = protoMsg.create(payload);\n            let buffer = protoMsg.encode(msg).finish();\n            return buffer;\n        },\n        decode: function(buffer) {\n            let protoMsg = _root.lookupType('base.MessagePkg');\n            console.log(buffer);\n            //buffer = formatBuffer(buffer)\n           // console.log(buffer);\n            let msg      = protoMsg.decode(buffer);\n            return msg;\n        }\n    }\n});\n"]}